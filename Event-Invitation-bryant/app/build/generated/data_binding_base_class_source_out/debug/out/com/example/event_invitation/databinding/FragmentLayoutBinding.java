// Generated by view binder compiler. Do not edit!
package com.example.event_invitation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.event_invitation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView addressView;

  @NonNull
  public final Button calButton;

  @NonNull
  public final TextView descriptView;

  @NonNull
  public final TextView eventNameView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final Button sendButton;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView timeView;

  private FragmentLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView addressView,
      @NonNull Button calButton, @NonNull TextView descriptView, @NonNull TextView eventNameView,
      @NonNull ImageView imageView, @NonNull Button sendButton, @NonNull TextView textView,
      @NonNull TextView timeView) {
    this.rootView = rootView;
    this.addressView = addressView;
    this.calButton = calButton;
    this.descriptView = descriptView;
    this.eventNameView = eventNameView;
    this.imageView = imageView;
    this.sendButton = sendButton;
    this.textView = textView;
    this.timeView = timeView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressView;
      TextView addressView = ViewBindings.findChildViewById(rootView, id);
      if (addressView == null) {
        break missingId;
      }

      id = R.id.calButton;
      Button calButton = ViewBindings.findChildViewById(rootView, id);
      if (calButton == null) {
        break missingId;
      }

      id = R.id.descriptView;
      TextView descriptView = ViewBindings.findChildViewById(rootView, id);
      if (descriptView == null) {
        break missingId;
      }

      id = R.id.eventNameView;
      TextView eventNameView = ViewBindings.findChildViewById(rootView, id);
      if (eventNameView == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.sendButton;
      Button sendButton = ViewBindings.findChildViewById(rootView, id);
      if (sendButton == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.timeView;
      TextView timeView = ViewBindings.findChildViewById(rootView, id);
      if (timeView == null) {
        break missingId;
      }

      return new FragmentLayoutBinding((LinearLayout) rootView, addressView, calButton,
          descriptView, eventNameView, imageView, sendButton, textView, timeView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
